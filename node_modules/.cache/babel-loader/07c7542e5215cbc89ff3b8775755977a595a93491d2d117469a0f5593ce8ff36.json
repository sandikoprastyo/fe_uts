{"ast":null,"code":"var _jsxFileName = \"/Users/dicko/Developer/dinda/fe-project/my-app/src/Pages/Teachers/Teachers.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport SideNavbar from '../../Components/SideNavbar';\nimport TableComponents from '../../Components/TableComponents';\nimport { THead, TBody } from '../../dataDummy/students'; // Asumsi data dalam format JSON\nimport EditTeacherForm from './EditTeacherForm'; // Import form di sini\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Students() {\n  _s();\n  const [TBodyStudents, setTBodyStudents] = useState(TBody); // Inisialisasi state dengan TBody\n  const [showModalEdit, setShowModalEdit] = useState(false);\n  const [showModalAdd, setShowModalAdd] = useState(false);\n  const [selectedStudent, setSelectedStudent] = useState(null);\n  useEffect(() => {\n    // Jika ada data yang perlu diambil dari API, bisa ditambahkan di sini\n  }, []);\n  const handleEdit = updatedStudent => {\n    setTBodyStudents(prevStudents => prevStudents.map(student => student.id === updatedStudent.id ? updatedStudent : student));\n    setShowModalEdit(false); // Tutup modal setelah edit\n  };\n  const handleDelete = id => {\n    setTBodyStudents(prevStudents => prevStudents.filter(student => student.id !== id));\n  };\n  const handleAdd = dataStudent => {\n    setTBodyStudents(prevStudents => [...prevStudents, {\n      ...dataStudent,\n      id: prevStudents.length + 1\n    } // Auto-increment ID\n    ]);\n    setShowModalAdd(false); // Tutup modal setelah menambah\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(SideNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-10 pt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center\",\n        children: \"Students\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-content\",\n        children: [/*#__PURE__*/_jsxDEV(TableComponents, {\n          thead: THead,\n          tbody: TBodyStudents,\n          buttonName: 'Add New Student',\n          handleDelete: handleDelete,\n          handleAdd: handleAdd,\n          handleEdit: student => {\n            setSelectedStudent(student);\n            setShowModalEdit(true);\n          },\n          openAddModal: () => setShowModalAdd(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), showModalEdit && selectedStudent && /*#__PURE__*/_jsxDEV(EditTeacherForm, {\n          student: selectedStudent,\n          onSave: handleEdit,\n          onCancel: () => setShowModalEdit(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), showModalAdd && /*#__PURE__*/_jsxDEV(EditTeacherForm, {\n          onSave: handleAdd,\n          onCancel: () => setShowModalAdd(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(Students, \"TgW83GvzqUOlN1t/jkWnsn3pJmE=\");\n_c = Students;\nvar _c;\n$RefreshReg$(_c, \"Students\");","map":{"version":3,"names":["React","useEffect","useState","SideNavbar","TableComponents","THead","TBody","EditTeacherForm","jsxDEV","_jsxDEV","Students","_s","TBodyStudents","setTBodyStudents","showModalEdit","setShowModalEdit","showModalAdd","setShowModalAdd","selectedStudent","setSelectedStudent","handleEdit","updatedStudent","prevStudents","map","student","id","handleDelete","filter","handleAdd","dataStudent","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","thead","tbody","buttonName","openAddModal","onSave","onCancel","_c","$RefreshReg$"],"sources":["/Users/dicko/Developer/dinda/fe-project/my-app/src/Pages/Teachers/Teachers.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport SideNavbar from '../../Components/SideNavbar';\nimport TableComponents from '../../Components/TableComponents';\nimport { THead, TBody } from '../../dataDummy/students'; // Asumsi data dalam format JSON\nimport EditTeacherForm from './EditTeacherForm'; // Import form di sini\n\nexport default function Students() {\n  const [TBodyStudents, setTBodyStudents] = useState(TBody); // Inisialisasi state dengan TBody\n  const [showModalEdit, setShowModalEdit] = useState(false);\n  const [showModalAdd, setShowModalAdd] = useState(false);\n  const [selectedStudent, setSelectedStudent] = useState(null);\n\n  useEffect(() => {\n    // Jika ada data yang perlu diambil dari API, bisa ditambahkan di sini\n  }, []);\n\n  const handleEdit = (updatedStudent) => {\n    setTBodyStudents((prevStudents) =>\n      prevStudents.map((student) =>\n        student.id === updatedStudent.id ? updatedStudent : student\n      )\n    );\n    setShowModalEdit(false); // Tutup modal setelah edit\n  };\n\n  const handleDelete = (id) => {\n    setTBodyStudents((prevStudents) =>\n      prevStudents.filter((student) => student.id !== id)\n    );\n  };\n\n  const handleAdd = (dataStudent) => {\n    setTBodyStudents((prevStudents) => [\n      ...prevStudents,\n      { ...dataStudent, id: prevStudents.length + 1 }, // Auto-increment ID\n    ]);\n    setShowModalAdd(false); // Tutup modal setelah menambah\n  };\n\n  return (\n    <div className='row'>\n      <SideNavbar />\n      <div className='col-10 pt-5'>\n        <h2 className='text-center'>Students</h2>\n        <div className='dashboard-content'>\n          <TableComponents\n            thead={THead}\n            tbody={TBodyStudents}\n            buttonName={'Add New Student'}\n            handleDelete={handleDelete}\n            handleAdd={handleAdd}\n            handleEdit={(student) => {\n              setSelectedStudent(student);\n              setShowModalEdit(true);\n            }}\n            openAddModal={() => setShowModalAdd(true)}\n          />\n          \n          {/* Modal Form Edit */}\n          {showModalEdit && selectedStudent && (\n            <EditTeacherForm\n              student={selectedStudent}\n              onSave={handleEdit}\n              onCancel={() => setShowModalEdit(false)}\n            />\n          )}\n\n          {/* Modal Form Add */}\n          {showModalAdd && (\n            <EditTeacherForm\n              onSave={handleAdd}\n              onCancel={() => setShowModalAdd(false)}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}