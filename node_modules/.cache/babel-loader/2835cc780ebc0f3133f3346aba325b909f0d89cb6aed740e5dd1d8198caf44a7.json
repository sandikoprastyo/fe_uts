{"ast":null,"code":"var _jsxFileName = \"/Users/dicko/Developer/dinda/fe-project/my-app/src/Pages/Course/Course.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport SideNavbar from '../../Components/SideNavbar';\nimport TableComponents from '../../Components/TableComponents';\nimport { THead, TBody } from '../../dataDummy/course'; // Asumsi data dalam format JSON\nimport EditCourseForm from './EditCourseForm'; // Import form di sini\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Course() {\n  _s();\n  const [TBodyCourse, setTBodyCourse] = useState(TBody); // Inisialisasi state dengan TBody\n  const [showModalEdit, setShowModalEdit] = useState(false);\n  const [showModalAdd, setShowModalAdd] = useState(false);\n  const [selectedCourse, setSelectedCourse] = useState(null);\n  useEffect(() => {\n    // Jika ada data yang perlu diambil dari API, bisa ditambahkan di sini\n  }, []);\n  const handleEdit = updatedTeacher => {\n    setTBodyCourse(prevTeacher => prevTeacher.map(teacher => teacher.id === updatedTeacher.id ? updatedTeacher : teacher));\n    setShowModalEdit(false); // Tutup modal setelah edit\n  };\n  const handleDelete = id => {\n    setTBodyCourse(prevTeacher => prevTeacher.filter(teacher => teacher.id !== id));\n  };\n  const handleAdd = dataTeacher => {\n    setTBodyCourse(prevTeacher => [...prevTeacher, {\n      ...dataTeacher,\n      id: prevTeacher.length + 1\n    } // Auto-increment ID\n    ]);\n    setShowModalAdd(false); // Tutup modal setelah menambah\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(SideNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-10 pt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center\",\n        children: \"Course\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-content\",\n        children: [/*#__PURE__*/_jsxDEV(TableComponents, {\n          thead: THead,\n          tbody: TBodyCourse,\n          buttonName: 'Add New Course',\n          handleDelete: handleDelete,\n          handleAdd: handleAdd,\n          handleEdit: course => {\n            setSelectedCourse(course);\n            setShowModalEdit(true);\n          },\n          openAddModal: () => setShowModalAdd(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), showModalEdit && selectedCourse && /*#__PURE__*/_jsxDEV(EditCourseForm, {\n          course: selectedCourse,\n          onSave: handleEdit,\n          onCancel: () => setShowModalEdit(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), showModalAdd && /*#__PURE__*/_jsxDEV(EditCourseForm, {\n          onSave: handleAdd,\n          onCancel: () => setShowModalAdd(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(Course, \"qDmOksJVHVj+pqfSaI/rLsETVdQ=\");\n_c = Course;\nvar _c;\n$RefreshReg$(_c, \"Course\");","map":{"version":3,"names":["React","useEffect","useState","SideNavbar","TableComponents","THead","TBody","EditCourseForm","jsxDEV","_jsxDEV","Course","_s","TBodyCourse","setTBodyCourse","showModalEdit","setShowModalEdit","showModalAdd","setShowModalAdd","selectedCourse","setSelectedCourse","handleEdit","updatedTeacher","prevTeacher","map","teacher","id","handleDelete","filter","handleAdd","dataTeacher","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","thead","tbody","buttonName","course","openAddModal","onSave","onCancel","_c","$RefreshReg$"],"sources":["/Users/dicko/Developer/dinda/fe-project/my-app/src/Pages/Course/Course.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport SideNavbar from '../../Components/SideNavbar';\nimport TableComponents from '../../Components/TableComponents';\nimport { THead, TBody } from '../../dataDummy/course'; // Asumsi data dalam format JSON\nimport EditCourseForm from './EditCourseForm'; // Import form di sini\n\nexport default function Course() {\n  const [TBodyCourse, setTBodyCourse] = useState(TBody); // Inisialisasi state dengan TBody\n  const [showModalEdit, setShowModalEdit] = useState(false);\n  const [showModalAdd, setShowModalAdd] = useState(false);\n  const [selectedCourse, setSelectedCourse] = useState(null);\n\n  useEffect(() => {\n    // Jika ada data yang perlu diambil dari API, bisa ditambahkan di sini\n  }, []);\n\n  const handleEdit = (updatedTeacher) => {\n    setTBodyCourse((prevTeacher) =>\n      prevTeacher.map((teacher) =>\n        teacher.id === updatedTeacher.id ? updatedTeacher : teacher,\n      ),\n    );\n    setShowModalEdit(false); // Tutup modal setelah edit\n  };\n\n  const handleDelete = (id) => {\n    setTBodyCourse((prevTeacher) =>\n      prevTeacher.filter((teacher) => teacher.id !== id),\n    );\n  };\n\n  const handleAdd = (dataTeacher) => {\n    setTBodyCourse((prevTeacher) => [\n      ...prevTeacher,\n      { ...dataTeacher, id: prevTeacher.length + 1 }, // Auto-increment ID\n    ]);\n    setShowModalAdd(false); // Tutup modal setelah menambah\n  };\n\n  return (\n    <div className='row'>\n      <SideNavbar />\n      <div className='col-10 pt-5'>\n        <h2 className='text-center'>Course</h2>\n        <div className='dashboard-content'>\n          <TableComponents\n            thead={THead}\n            tbody={TBodyCourse}\n            buttonName={'Add New Course'}\n            handleDelete={handleDelete}\n            handleAdd={handleAdd}\n            handleEdit={(course) => {\n              setSelectedCourse(course);\n              setShowModalEdit(true);\n            }}\n            openAddModal={() => setShowModalAdd(true)}\n          />\n\n          {/* Modal Form Edit */}\n          {showModalEdit && selectedCourse && (\n            <EditCourseForm\n              course={selectedCourse}\n              onSave={handleEdit}\n              onCancel={() => setShowModalEdit(false)}\n            />\n          )}\n\n          {/* Modal Form Add */}\n          {showModalAdd && (\n            <EditCourseForm\n              onSave={handleAdd}\n              onCancel={() => setShowModalAdd(false)}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}